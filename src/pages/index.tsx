import type { GetServerSidePropsContext, NextPage } from "next";
import Head from "next/head";
import CreateGame from "../components/CreateGame";
import JoinGame from "../components/JoinGame";
import { getServerAuthSession } from "../server/common/get-server-auth-session";
import { trpc } from "../utils/trpc";

const CurrentGame = () => {
  const game = trpc.useQuery(["auth.getGameInProgress"], {
    // refetchInterval: 1000,
  });
  console.log(game.data);
  if (game.data) {
    return (
      <div className="bg-white border rounded-lg p-4">
        <h1>TEST</h1>
        {game.data.players.map((player) => {
          return (
            <div
              key={player.name}
              className="border rounded-lg flex flex-row items-center gap-4 px-4 py-2"
            >
              <div className="avatar">
                <div className="w-20 mask mask-squircle">
                  <img src={player.image} alt="Avatar" />
                </div>
              </div>
              <div>
                <p className="text-2xl font-bold">{player.name}</p>
                <p>
                  Rating: <b>{player.elo}</b>
                </p>
              </div>
            </div>
          );
        })}
      </div>
    );
  }

  return null;
};

const Home: NextPage = (props) => {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex items-center justify-center min-h-screen bg-slate-500">
        <div className="flex flex-col p-6 gap-6 bg-white rounded-lg">
          <CreateGame />
          <JoinGame />
        </div>
        <CurrentGame />
      </main>
    </>
  );
};

export async function getServerSideProps(context: {
  req: GetServerSidePropsContext["req"];
  res: GetServerSidePropsContext["res"];
}) {
  const session = await getServerAuthSession(context);

  if (!session) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }

  return {
    props: { session },
  };
}

export default Home;
